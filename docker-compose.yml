services:
    postgresql:
        container_name: postgresql
        build:
            context: .
            dockerfile: ./Docker/PostgreSQL/Dockerfile
        volumes:
            - postgresql_volume:/var/lib/postgresql
        networks:
            - matcha-network
        environment:
            POSTGRESQL_ROOT_PASSWORD: ${POSTGRESQL_ROOT_PASSWORD}
            POSTGRESQL_USER: ${POSTGRESQL_USER}
            POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
            POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
            TZ: ${TIMEZONE}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: on-failure
        ports:
            - "${POSTGRESQL_PORT}:${POSTGRESQL_PORT}"
        expose:
            - "${POSTGRESQL_PORT}"

    backend:
        container_name: backend
        build:
            context: .
            dockerfile: ./Docker/Backend/Dockerfile
        volumes:
            - ./Backend:/backend
            - ./uploads:/uploads
        networks:
            - matcha-network
        environment:
            TZ: ${TIMEZONE}
        depends_on:
            postgresql:
                condition: service_healthy
        env_file: .env
        ports:
            - "${API_PORT}:${API_PORT}"
        restart: on-failure

    frontend:
        container_name: frontend
        build:
            context: .
            dockerfile: ./Docker/Frontend/Dockerfile
        volumes:
            - ./Frontend:/Frontend
        networks:
            - matcha-network
        environment:
            TZ: ${TIMEZONE}
        env_file: .env
        ports:
            - "${FRONTEND_PORT}:${FRONTEND_PORT}"
        expose:
            - "${FRONTEND_PORT}"
        restart: on-failure

volumes:
    postgresql_volume:
        driver: local
        driver_opts:
            type: "none"
            o: "bind"
            device: "${POSTGRESQL_VOLUME_PATH}"
networks:
    matcha-network:
        driver: bridge
