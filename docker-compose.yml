version: "3.8"

services:
    postgresql:
        image: bitnami/postgresql:16.4.0
        container_name: postgresql
        #user: ${MY_USER_ID}:${MY_GROUP_ID}
        volumes:
            - postgresql_volume:/var/lib/postgresql
            - ./docker/PostgreSQL/init:/docker-entrypoint-initdb.d
        networks:
            - matcha-network
        environment:
            POSTGRESQL_ROOT_PASSWORD: ${POSTGRESQL_ROOT_PASSWORD}
            POSTGRESQL_USER: ${POSTGRESQL_USER}
            POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
            POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: on-failure
        ports:
            - "5432:5432"
        expose:
            - "5432"

    backend:
        container_name: backend
        build:
            context: ./Backend
            dockerfile: ../docker/backend/Dockerfile
        volumes:
            - ./Backend:/matcha_backend
        env_file: .env
        restart: on-failure
        networks:
            - matcha-network
        ports:
            - "3001:3001"
        depends_on:
            postgresql:
              condition: service_healthy

    frontend:
        container_name: frontend
        build:
            context: ./Frontend
            dockerfile: ../Docker/Frontend/Dockerfile
        volumes:
            - ./Frontend:/frontend
            - /Frontend/node_modules
        env_file: .env
        restart: on-failure
        networks:
            - matcha-network
        ports:
            - "3000:3000"
        expose:
            - "3000"
        command: ["npm", "run", "dev"]
volumes:
    postgresql_volume:
        driver: local
        driver_opts:
            type: "none"
            o: "bind"
            device: "${POSTGRESQL_VOLUME_PATH}"
networks:
    matcha-network:
        driver: bridge
